name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup-conda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Conda environment
        id: cache-conda
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-${{ runner.os }}-python-3.10-${{ hashFiles('environment.yml') }}
          restore-keys: |
            conda-${{ runner.os }}-python-3.10-
      - name: Set up Conda
        if: steps.cache-conda.outputs.cache-hit != 'true'
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10"
          environment-file: environment.yml
          activate-environment: chemsmart
          channels: conda-forge,defaults
      - name: Verify Conda environment
        shell: bash -l {0}
        run: |
          conda info
          conda list

  build:
    needs: setup-conda
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore Conda cache
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-${{ runner.os }}-python-3.10-${{ hashFiles('environment.yml') }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          python -m pip install --upgrade pip
          make install
          
  pre-commit:
    needs: setup-conda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore Conda cache
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-${{ runner.os }}-python-3.10-${{ hashFiles('environment.yml') }}
      - name: Install pre-commit
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          pip install pre-commit
      - name: Run pre-commit
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          pre-commit run --all-files

  tests_linux:
    needs: [pre-commit, build, setup-conda]  # Add build as a dependency
    if: ${{ success() && needs.build.result == 'success' }}  # Only run if build succeeds
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [Ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore Conda cache
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-${{ runner.os }}-python-3.10-${{ hashFiles('environment.yml') }}
      - name: Install project
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          make install
      - name: Run tests
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v5

  tests_mac:
    needs: [pre-commit, build, setup-conda]  # Add build as a dependency
    if: ${{ success() && needs.build.result == 'success' }}  # Only run if build succeeds
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore Conda cache
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-${{ runner.os }}-python-3.10-${{ hashFiles('environment.yml') }}
      - name: Install project
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          make install
      - name: Run tests
        shell: bash -l {0}
        run: |
          conda activate chemsmart
          make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v5

  tests_win:
    needs: [pre-commit, build, setup-conda]  # Add build as a dependency
    if: ${{ success() && needs.build.result == 'success' }}  # Only run if build succeeds
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore Conda cache
        uses: actions/cache@v4
        with:
          path: ~/miniconda3/envs/chemsmart
          key: conda-Windows-python-3.10-${{ hashFiles('environment.yml') }}
      - name: Install make
        shell: cmd
        run: |
          choco install make --force
      - name: Install project
        shell: cmd
        run: |
          call "%CONDA%\Scripts\activate.bat" chemsmart
          make install
      - name: Run tests
        shell: cmd
        run: |
          call "%CONDA%\Scripts\activate.bat" chemsmart
          make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v5
